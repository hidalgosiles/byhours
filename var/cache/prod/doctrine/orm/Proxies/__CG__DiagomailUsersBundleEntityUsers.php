<?php

namespace Proxies\__CG__\Diagomail\UsersBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \Diagomail\UsersBundle\Entity\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userStatus', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userActivity', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userProperties', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userPersonalData', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userSettings', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'export', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'smsLog', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'apiKey', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'blacklist', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'blacklistCreator', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'paymentTransaction', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'dedicatedIp', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'supportMessage', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'supportThread', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userDomain', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userPool', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'webhooks', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'communications', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'messageLog', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'statsAgg', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'invoice', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'roles'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userStatus', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userActivity', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userProperties', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userPersonalData', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userSettings', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'export', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'smsLog', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'apiKey', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'blacklist', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'blacklistCreator', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'paymentTransaction', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'dedicatedIp', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'supportMessage', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'supportThread', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userDomain', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'userPool', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'webhooks', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'communications', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'messageLog', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'statsAgg', '' . "\0" . 'Diagomail\\UsersBundle\\Entity\\Users' . "\0" . 'invoice', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'roles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserStatus(\Diagomail\UsersBundle\Entity\UserStatus $userStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserStatus', [$userStatus]);

        return parent::setUserStatus($userStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserStatus', []);

        return parent::getUserStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserActivity(\Diagomail\UsersBundle\Entity\UserActivity $userActivity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserActivity', [$userActivity]);

        return parent::addUserActivity($userActivity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserActivity(\Diagomail\UsersBundle\Entity\UserActivity $userActivity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserActivity', [$userActivity]);

        return parent::removeUserActivity($userActivity);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserActivity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserActivity', []);

        return parent::getUserActivity();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserSetting(\Diagomail\UsersBundle\Entity\UserSettings $userSetting)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserSetting', [$userSetting]);

        return parent::addUserSetting($userSetting);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserSetting(\Diagomail\UsersBundle\Entity\UserSettings $userSetting)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserSetting', [$userSetting]);

        return parent::removeUserSetting($userSetting);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserSettings', []);

        return parent::getUserSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function addSmsLog(\Diagomail\UsersBundle\Entity\SmsLog $smsLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSmsLog', [$smsLog]);

        return parent::addSmsLog($smsLog);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSmsLog(\Diagomail\UsersBundle\Entity\SmsLog $smsLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSmsLog', [$smsLog]);

        return parent::removeSmsLog($smsLog);
    }

    /**
     * {@inheritDoc}
     */
    public function getSmsLog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSmsLog', []);

        return parent::getSmsLog();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserProperties(\Diagomail\UsersBundle\Entity\UserProperties $userProperties = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserProperties', [$userProperties]);

        return parent::setUserProperties($userProperties);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserProperties', []);

        return parent::getUserProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPersonalData(\Diagomail\UsersBundle\Entity\UserPersonalData $userPersonalData = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPersonalData', [$userPersonalData]);

        return parent::setUserPersonalData($userPersonalData);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPersonalData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPersonalData', []);

        return parent::getUserPersonalData();
    }

    /**
     * {@inheritDoc}
     */
    public function addApiKey(\Diagomail\AppBundle\Entity\ApiKey $apiKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addApiKey', [$apiKey]);

        return parent::addApiKey($apiKey);
    }

    /**
     * {@inheritDoc}
     */
    public function removeApiKey(\Diagomail\AppBundle\Entity\ApiKey $apiKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeApiKey', [$apiKey]);

        return parent::removeApiKey($apiKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiKey', []);

        return parent::getApiKey();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlacklist(\Diagomail\AppBundle\Entity\Blacklist $blacklist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlacklist', [$blacklist]);

        return parent::addBlacklist($blacklist);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlacklist(\Diagomail\AppBundle\Entity\Blacklist $blacklist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlacklist', [$blacklist]);

        return parent::removeBlacklist($blacklist);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlacklist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlacklist', []);

        return parent::getBlacklist();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlacklistCreator(\Diagomail\AppBundle\Entity\Blacklist $blacklistCreator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlacklistCreator', [$blacklistCreator]);

        return parent::addBlacklistCreator($blacklistCreator);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlacklistCreator(\Diagomail\AppBundle\Entity\Blacklist $blacklistCreator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlacklistCreator', [$blacklistCreator]);

        return parent::removeBlacklistCreator($blacklistCreator);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlacklistCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlacklistCreator', []);

        return parent::getBlacklistCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaymentTransaction(\Diagomail\AppBundle\Entity\PaymentTransaction $paymentTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaymentTransaction', [$paymentTransaction]);

        return parent::addPaymentTransaction($paymentTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaymentTransaction(\Diagomail\AppBundle\Entity\PaymentTransaction $paymentTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaymentTransaction', [$paymentTransaction]);

        return parent::removePaymentTransaction($paymentTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTransaction', []);

        return parent::getPaymentTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function addDedicatedIp(\Diagomail\AppBundle\Entity\DedicatedIp $dedicatedIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDedicatedIp', [$dedicatedIp]);

        return parent::addDedicatedIp($dedicatedIp);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDedicatedIp(\Diagomail\AppBundle\Entity\DedicatedIp $dedicatedIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDedicatedIp', [$dedicatedIp]);

        return parent::removeDedicatedIp($dedicatedIp);
    }

    /**
     * {@inheritDoc}
     */
    public function getDedicatedIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDedicatedIp', []);

        return parent::getDedicatedIp();
    }

    /**
     * {@inheritDoc}
     */
    public function addExport(\Diagomail\AppBundle\Entity\Export $export)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExport', [$export]);

        return parent::addExport($export);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExport(\Diagomail\AppBundle\Entity\Export $export)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExport', [$export]);

        return parent::removeExport($export);
    }

    /**
     * {@inheritDoc}
     */
    public function getExport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExport', []);

        return parent::getExport();
    }

    /**
     * {@inheritDoc}
     */
    public function addSupportMessage(\Diagomail\AppBundle\Entity\SupportMessage $supportMessage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupportMessage', [$supportMessage]);

        return parent::addSupportMessage($supportMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupportMessage(\Diagomail\AppBundle\Entity\SupportMessage $supportMessage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupportMessage', [$supportMessage]);

        return parent::removeSupportMessage($supportMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupportMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupportMessage', []);

        return parent::getSupportMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function addSupportThread(\Diagomail\AppBundle\Entity\SupportThread $supportThread)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupportThread', [$supportThread]);

        return parent::addSupportThread($supportThread);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupportThread(\Diagomail\AppBundle\Entity\SupportThread $supportThread)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupportThread', [$supportThread]);

        return parent::removeSupportThread($supportThread);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupportThread()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupportThread', []);

        return parent::getSupportThread();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserDomain(\Diagomail\AppBundle\Entity\UserDomain $userDomain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserDomain', [$userDomain]);

        return parent::addUserDomain($userDomain);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserDomain(\Diagomail\AppBundle\Entity\UserDomain $userDomain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserDomain', [$userDomain]);

        return parent::removeUserDomain($userDomain);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserDomain', []);

        return parent::getUserDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserPool(\Diagomail\AppBundle\Entity\UserPool $userPool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserPool', [$userPool]);

        return parent::addUserPool($userPool);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserPool(\Diagomail\AppBundle\Entity\UserPool $userPool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserPool', [$userPool]);

        return parent::removeUserPool($userPool);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPool()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPool', []);

        return parent::getUserPool();
    }

    /**
     * {@inheritDoc}
     */
    public function addWebhook(\Diagomail\AppBundle\Entity\Webhooks $webhook)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addWebhook', [$webhook]);

        return parent::addWebhook($webhook);
    }

    /**
     * {@inheritDoc}
     */
    public function removeWebhook(\Diagomail\AppBundle\Entity\Webhooks $webhook)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeWebhook', [$webhook]);

        return parent::removeWebhook($webhook);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebhooks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebhooks', []);

        return parent::getWebhooks();
    }

    /**
     * {@inheritDoc}
     */
    public function addInvoice(\Diagomail\AppBundle\Entity\Invoice $invoice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInvoice', [$invoice]);

        return parent::addInvoice($invoice);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInvoice(\Diagomail\AppBundle\Entity\Invoice $invoice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInvoice', [$invoice]);

        return parent::removeInvoice($invoice);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoice', []);

        return parent::getInvoice();
    }

    /**
     * {@inheritDoc}
     */
    public function addCommunications(\Diagomail\AppBundle\Entity\Communications $communications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommunications', [$communications]);

        return parent::addCommunications($communications);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommunications(\Diagomail\AppBundle\Entity\Communications $communications)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommunications', [$communications]);

        return parent::removeCommunications($communications);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommunications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommunications', []);

        return parent::getCommunications();
    }

    /**
     * {@inheritDoc}
     */
    public function removeMessageLog(\Diagomail\AppBundle\Entity\MessageLog $messageLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMessageLog', [$messageLog]);

        return parent::removeMessageLog($messageLog);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageLog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageLog', []);

        return parent::getMessageLog();
    }

    /**
     * {@inheritDoc}
     */
    public function removeStatsAgg(\Diagomail\AppBundle\Entity\StatsAgg $statsAgg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStatsAgg', [$statsAgg]);

        return parent::removeStatsAgg($statsAgg);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatsAgg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatsAgg', []);

        return parent::getStatsAgg();
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveApiKeys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveApiKeys', []);

        return parent::getActiveApiKeys();
    }

    /**
     * {@inheritDoc}
     */
    public function getInactiveApiKeys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInactiveApiKeys', []);

        return parent::getInactiveApiKeys();
    }

    /**
     * {@inheritDoc}
     */
    public function getValidUserDomains()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidUserDomains', []);

        return parent::getValidUserDomains();
    }

    /**
     * {@inheritDoc}
     */
    public function getPendingUserDomains()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPendingUserDomains', []);

        return parent::getPendingUserDomains();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameCanonical', []);

        return parent::getUsernameCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCanonical', []);

        return parent::getEmailCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', []);

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isSuperAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuperAdmin', []);

        return parent::isSuperAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonical($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonical', [$usernameCanonical]);

        return parent::setUsernameCanonical($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCanonical($emailCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCanonical', [$emailCanonical]);

        return parent::setEmailCanonical($emailCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$boolean]);

        return parent::setEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperAdmin($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperAdmin', [$boolean]);

        return parent::setSuperAdmin($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$time]);

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($confirmationToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', [$confirmationToken]);

        return parent::setConfirmationToken($confirmationToken);
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', [$date]);

        return parent::setPasswordRequestedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', []);

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', [$ttl]);

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', []);

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', [$name]);

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', [$group]);

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', [$group]);

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
