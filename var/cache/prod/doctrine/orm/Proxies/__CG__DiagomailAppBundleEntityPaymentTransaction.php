<?php

namespace Proxies\__CG__\Diagomail\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PaymentTransaction extends \Diagomail\AppBundle\Entity\PaymentTransaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'id', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'numtrans', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'numappel', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'numquestion', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'autorisation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'commentaire', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'refabonne', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'porteur', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'pays', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'expired', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'reference', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'payboxStatus', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'payboxType', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'creationDate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'user', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'paymentStatus', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'creditBalanceTransaction', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'dedicatedIpTransaction'];
        }

        return ['__isInitialized__', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'id', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'numtrans', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'numappel', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'numquestion', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'autorisation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'commentaire', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'refabonne', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'porteur', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'pays', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'expired', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'reference', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'payboxStatus', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'payboxType', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'creationDate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'user', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'paymentStatus', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'creditBalanceTransaction', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\PaymentTransaction' . "\0" . 'dedicatedIpTransaction'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PaymentTransaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentResponse($parameters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentResponse', [$parameters]);

        return parent::setPaymentResponse($parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Diagomail\UsersBundle\Entity\Users $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentStatus(\Diagomail\AppBundle\Entity\PaymentStatus $paymentStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentStatus', [$paymentStatus]);

        return parent::setPaymentStatus($paymentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentStatus', []);

        return parent::getPaymentStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumtrans($numtrans)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumtrans', [$numtrans]);

        return parent::setNumtrans($numtrans);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumtrans()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumtrans', []);

        return parent::getNumtrans();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumappel($numappel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumappel', [$numappel]);

        return parent::setNumappel($numappel);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumappel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumappel', []);

        return parent::getNumappel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumquestion($numquestion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumquestion', [$numquestion]);

        return parent::setNumquestion($numquestion);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumquestion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumquestion', []);

        return parent::getNumquestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutorisation($autorisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutorisation', [$autorisation]);

        return parent::setAutorisation($autorisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutorisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutorisation', []);

        return parent::getAutorisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentaire($commentaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentaire', [$commentaire]);

        return parent::setCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaire', []);

        return parent::getCommentaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefabonne($refabonne)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefabonne', [$refabonne]);

        return parent::setRefabonne($refabonne);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefabonne()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefabonne', []);

        return parent::getRefabonne();
    }

    /**
     * {@inheritDoc}
     */
    public function setPorteur($porteur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPorteur', [$porteur]);

        return parent::setPorteur($porteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getPorteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPorteur', []);

        return parent::getPorteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setPays($pays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPays', [$pays]);

        return parent::setPays($pays);
    }

    /**
     * {@inheritDoc}
     */
    public function getPays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPays', []);

        return parent::getPays();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpired($expired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpired', [$expired]);

        return parent::setExpired($expired);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpired', []);

        return parent::getExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayboxStatus($payboxStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayboxStatus', [$payboxStatus]);

        return parent::setPayboxStatus($payboxStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayboxStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayboxStatus', []);

        return parent::getPayboxStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayboxType($payboxType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayboxType', [$payboxType]);

        return parent::setPayboxType($payboxType);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayboxType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayboxType', []);

        return parent::getPayboxType();
    }

    /**
     * {@inheritDoc}
     */
    public function addDedicatedIpTransaction(\Diagomail\AppBundle\Entity\DedicatedIpTransaction $dedicatedIpTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDedicatedIpTransaction', [$dedicatedIpTransaction]);

        return parent::addDedicatedIpTransaction($dedicatedIpTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDedicatedIpTransaction(\Diagomail\AppBundle\Entity\DedicatedIpTransaction $dedicatedIpTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDedicatedIpTransaction', [$dedicatedIpTransaction]);

        return parent::removeDedicatedIpTransaction($dedicatedIpTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getDedicatedIpTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDedicatedIpTransaction', []);

        return parent::getDedicatedIpTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function addCreditBalanceTransaction(\Diagomail\AppBundle\Entity\CreditBalanceTransaction $creditBalanceTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCreditBalanceTransaction', [$creditBalanceTransaction]);

        return parent::addCreditBalanceTransaction($creditBalanceTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCreditBalanceTransaction(\Diagomail\AppBundle\Entity\CreditBalanceTransaction $creditBalanceTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCreditBalanceTransaction', [$creditBalanceTransaction]);

        return parent::removeCreditBalanceTransaction($creditBalanceTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditBalanceTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditBalanceTransaction', []);

        return parent::getCreditBalanceTransaction();
    }

}
