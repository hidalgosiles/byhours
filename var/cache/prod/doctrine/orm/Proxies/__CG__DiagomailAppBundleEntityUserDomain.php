<?php

namespace Proxies\__CG__\Diagomail\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserDomain extends \Diagomail\AppBundle\Entity\UserDomain implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'id', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'name', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'cnameValidation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'cnameEnabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'spfText', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimText', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'spfValidation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'spfEnabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimPublic', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimPrivate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimValidation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimEnabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'creationDate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'enabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'removed', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'modificationDate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'user', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'messageLog'];
        }

        return ['__isInitialized__', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'id', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'name', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'cnameValidation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'cnameEnabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'spfText', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimText', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'spfValidation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'spfEnabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimPublic', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimPrivate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimValidation', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'dkimEnabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'creationDate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'enabled', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'removed', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'modificationDate', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'user', '' . "\0" . 'Diagomail\\AppBundle\\Entity\\UserDomain' . "\0" . 'messageLog'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserDomain $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCnameValidation($cnameValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCnameValidation', [$cnameValidation]);

        return parent::setCnameValidation($cnameValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCnameValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCnameValidation', []);

        return parent::getCnameValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpfValidation($spfValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpfValidation', [$spfValidation]);

        return parent::setSpfValidation($spfValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpfValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpfValidation', []);

        return parent::getSpfValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDkimValidation($dkimValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDkimValidation', [$dkimValidation]);

        return parent::setDkimValidation($dkimValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDkimValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDkimValidation', []);

        return parent::getDkimValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDkimPublic($dkimPublic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDkimPublic', [$dkimPublic]);

        return parent::setDkimPublic($dkimPublic);
    }

    /**
     * {@inheritDoc}
     */
    public function getDkimPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDkimPublic', []);

        return parent::getDkimPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setDkimPrivate($dkimPrivate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDkimPrivate', [$dkimPrivate]);

        return parent::setDkimPrivate($dkimPrivate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDkimPrivate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDkimPrivate', []);

        return parent::getDkimPrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setModificationDate($modificationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModificationDate', [$modificationDate]);

        return parent::setModificationDate($modificationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getModificationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModificationDate', []);

        return parent::getModificationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Diagomail\UsersBundle\Entity\Users $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpfText($spfText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpfText', [$spfText]);

        return parent::setSpfText($spfText);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpfText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpfText', []);

        return parent::getSpfText();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpfEnabled($spfEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpfEnabled', [$spfEnabled]);

        return parent::setSpfEnabled($spfEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpfEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpfEnabled', []);

        return parent::getSpfEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setCnameEnabled($cnameEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCnameEnabled', [$cnameEnabled]);

        return parent::setCnameEnabled($cnameEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getCnameEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCnameEnabled', []);

        return parent::getCnameEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setDkimEnabled($dkimEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDkimEnabled', [$dkimEnabled]);

        return parent::setDkimEnabled($dkimEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getDkimEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDkimEnabled', []);

        return parent::getDkimEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoved($removed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoved', [$removed]);

        return parent::setRemoved($removed);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoved', []);

        return parent::getRemoved();
    }

    /**
     * {@inheritDoc}
     */
    public function setDkimText($dkimText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDkimText', [$dkimText]);

        return parent::setDkimText($dkimText);
    }

    /**
     * {@inheritDoc}
     */
    public function getDkimText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDkimText', []);

        return parent::getDkimText();
    }

    /**
     * {@inheritDoc}
     */
    public function addMessageLog(\Diagomail\AppBundle\Entity\MessageLog $messageLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMessageLog', [$messageLog]);

        return parent::addMessageLog($messageLog);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMessageLog(\Diagomail\AppBundle\Entity\MessageLog $messageLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMessageLog', [$messageLog]);

        return parent::removeMessageLog($messageLog);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageLog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageLog', []);

        return parent::getMessageLog();
    }

}
