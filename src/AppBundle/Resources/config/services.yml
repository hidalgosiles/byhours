parameters:
    mailer.model.class:         AppBundle\Model\Mailer
    export.helper.class:        AppBundle\Helpers\ExportHelper
    domain.helper.class:        AppBundle\Helpers\DomainHelper
    availability.helper.class:  AppBundle\Helpers\AvailabilityHelper
    clean_data.helper.class:    AppBundle\Helpers\CleanDataHelper
    webhook.helper.class:       AppBundle\Helpers\WebhookHelper
    payment.helper.class:       AppBundle\Helpers\PaymentHelper
    reputation.helper.class:    AppBundle\Helpers\ReputationHelper
    invoice.helper.class:       AppBundle\Helpers\InvoiceHelper
    s3uploader.model.class:     AppBundle\Model\S3Uploader
    paybox.model.class:         AppBundle\Model\Paybox
    openssl_service_class:      AppBundle\Model\OpenSSL
    
    
    invoice_folder: 'uploads/invoice'
    
    # ==== domain settings configuration 
    domain_settings:
        selector:   'default'
        domain_key: '_domainkey'
        cname:      '%cname%'
        dkim:       'v=DKIM1; r=postmaster; g=*; k=rsa; p=$public_key$'
        spf:        'v=spf1 mx include:_spf.diago.email ~all'
        prefix:     'clicks'
        
    # ==== Maximum webhook per call
    webhook_max_number_per_call: 10
    
    # ==== Support email
    support_email: 'hidalgo@diagomail.com'
        
    # ==== Interval per hours to calculate quota
    reputation_hours: 8
            
    # ==== Data clean settings
    # ---- logs older that xx days will be removed from database
    data_clean_settings: 30 
    
    # ==== Availability services to check
    availability_services:
        sms_alerts: 50 
        support_emails: 
            - "%support_email%"
        services: 
            - {service: 'Public Web UI', url: 'diagomail.com', port: '80'}
            - {service: 'Backoffice Web UI', url: 'backoffice.diagomail.com', port: '80'}
            - {service: 'Backoffice API', url: 'backofficeapi.diagomail.com', port: '80'}
            - {service: 'PMTA', url: 'pmta.diagomail.com', port: '25'}
            - {service: 'SMTP Relay', url: 'smtp.diagomail.com', port: '25'}
            - {service: 'Public API', url: 'api.diagomail.com', port: '80'}
    
services:
    # ==== mailer model
    mailer.model:
        class:      '%mailer.model.class%'
        lazy:       true
        arguments:  ['@mailer', '@swiftmailer.transport.real', '%domain%']  
        
    # ==== paybox model
    paybox.model:
        class:      '%paybox.model.class%'
        lazy:       true
        arguments:  ['@doctrine.orm.entity_manager', '@lexik_paybox.direc_plus.request_handler'] 
        
    # ==== export helper
    export.helper:
        class:      '%export.helper.class%'
        lazy:       true
        arguments:  ['@doctrine.orm.entity_manager', '@aws.s3.model']  
        
    # ==== domain helper
    domain.helper:
        class:      '%domain.helper.class%'
        lazy:       true
        arguments:  ["@doctrine.orm.entity_manager", "%domain_settings%"]  
        
    # ==== availability helper
    availability.helper:
        class:      '%availability.helper.class%'
        lazy:       true
        arguments:  
            - '@doctrine.orm.entity_manager'
            - '@mailer.model'
            - '@smsup.smsupapi.sender'
            - '%availability_services%'  
        
    # ==== clean_data helper
    clean_data.helper:
        class:      '%clean_data.helper.class%'
        lazy:       true
        arguments:  ['@doctrine.orm.entity_manager', '%data_clean_settings%']  
        
    # ==== Webhook helper
    webhook.helper:
        class:      '%webhook.helper.class%'
        lazy:       true
        arguments:  ['@doctrine.orm.entity_manager', '%webhook_max_number_per_call%']  
        
    # ==== Reputation helper
    reputation.helper:
        class:      '%reputation.helper.class%'
        lazy:       true
        arguments:  ['@doctrine.orm.entity_manager', '%reputation_hours%']  
        
    # ==== Payment helper
    payment.helper:
        class:      '%payment.helper.class%'
        lazy:       true
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@paybox.model'
            - '@invoice.helper'
            - '@mailer.model' 
            - '@templating' 
            - '%support_email%'
            - '@translator.default'
        
    # ==== Invoice helper
    invoice.helper:
        class: '%invoice.helper.class%'
        lazy:  true
        arguments: 
            - '@doctrine.orm.entity_manager'
            - '@templating'
            - '@knp_snappy.pdf'
            - '%invoice_folder%'
            - '@aws.s3.model'
            - '@translator.default'

    # ==== service to generate rsa keys
    openssl_service:
        class: '%openssl_service_class%'
        lazy:  true
        
    # ==== Aws ====
    # ---- Aws s3 uploader ----
    aws.s3.model:
        class:      "%s3uploader.model.class%"
        lazy:       true
        arguments:  [{version: "%aws_s3_version%", region: "%aws_s3_region%", credentials:{ key: "%aws_s3_key%", secret: "%aws_s3_secret%"}}]
